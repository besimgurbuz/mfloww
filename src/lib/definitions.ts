import { typedObjectKeys } from "./utils"

export const MONTH_NAMES: string[] = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December",
]

export const MONTH_ABREVVESIONS: string[] = [
  "Jan",
  "Feb",
  "Mar",
  "Apr",
  "May",
  "Jun",
  "Jul",
  "Aug",
  "Sep",
  "Oct",
  "Nov",
  "Dec",
]

export const SUPPORTED_CURRENCIES = {
  AUD: "ğŸ‡¦ğŸ‡º",
  BND: "ğŸ‡§ğŸ‡³",
  BRL: "ğŸ‡§ğŸ‡·",
  CAD: "ğŸ‡¨ğŸ‡¦",
  CHF: "ğŸ‡¨ğŸ‡­",
  CNY: "ğŸ‡¨ğŸ‡³",
  CZK: "ğŸ‡¨ğŸ‡¿",
  EGP: "ğŸ‡ªğŸ‡¬",
  EUR: "ğŸ‡ªğŸ‡º",
  GBP: "ğŸ‡¬ğŸ‡§",
  INR: "ğŸ‡®ğŸ‡³",
  IRR: "ğŸ‡®ğŸ‡·",
  JOD: "ğŸ‡¯ğŸ‡´",
  JPY: "ğŸ‡¯ğŸ‡µ",
  KRW: "ğŸ‡°ğŸ‡·",
  KWD: "ğŸ‡°ğŸ‡¼",
  LYD: "ğŸ‡±ğŸ‡¾",
  MXN: "ğŸ‡²ğŸ‡½",
  NZD: "ğŸ‡³ğŸ‡¿",
  OMR: "ğŸ‡´ğŸ‡²",
  PHP: "ğŸ‡µğŸ‡­",
  RUB: "ğŸ‡·ğŸ‡º",
  SGD: "ğŸ‡¸ğŸ‡¬",
  THB: "ğŸ‡¹ğŸ‡­",
  TRY: "ğŸ‡¹ğŸ‡·",
  USD: "ğŸ‡ºğŸ‡¸",
  UAH: "ğŸ‡ºğŸ‡¦",
  VND: "ğŸ‡»ğŸ‡³",
} as const

export type SupportedCurrencyCode = keyof typeof SUPPORTED_CURRENCIES

export const SUPPORTED_CURRENCY_CODES = typedObjectKeys(SUPPORTED_CURRENCIES)
export const SUPPORTED_CURRENCY_FLAGS = Object.values(SUPPORTED_CURRENCIES)

export type StorageType = "localStorage" | "sessionStorage"
export type StorageKey = string

export type SetValueToStorage = <T>(
  key: StorageKey,
  value: T,
  storageType: StorageType
) => void

export type GetValueFromStorage = <T>(
  key: StorageKey,
  storageType: StorageType
) => T | null

export interface ExchangeRate {
  base: SupportedCurrencyCode
  rates: Record<SupportedCurrencyCode, number>
  remaining?: number
}

export type RatesStore = Record<SupportedCurrencyCode, ExchangeRate["rates"]>

export type MontlyDifference = {
  percentage: number
  isIncreased: boolean
  type: "income" | "expense"
}
